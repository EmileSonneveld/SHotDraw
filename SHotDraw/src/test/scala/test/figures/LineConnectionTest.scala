/*
 * @(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	ï¿½ by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package test.figures

import org.shotdraw.figures.LineConnection
import junit.framework.TestCase

// JUnitDoclet begin import
// JUnitDoclet end import
/*
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/
// JUnitDoclet begin javadoc_class
/**
 * TestCase LineConnectionTest is generated by
 * JUnitDoclet to hold the tests for LineConnection.
 * @see org.shotdraw.figures.LineConnection
 */
class LineConnectionTest(name: String) extends TestCase(name) {

  /**
   * Factory method for instances of the class to be tested.
   */
  def createInstance: LineConnection = {
    new LineConnection
  }

  /**
   * Method setUp is overwriting the framework method to
   * prepare an instance of this TestCase for a single test.
   * It's called from the JUnit framework only.
   */
  override protected def setUp() {
    super.setUp
    lineconnection = createInstance
  }

  /**
   * Method tearDown is overwriting the framework method to
   * clean up after each single test of this TestCase.
   * It's called from the JUnit framework only.
   */
  override protected def tearDown() {
    lineconnection = null
    super.tearDown
  }

  /**
   * Method testCanConnect is testing canConnect
   * @see org.shotdraw.figures.LineConnection#canConnect()
   */
  def testCanConnect() {
  }

  /**
   * Method testConnectStart is testing connectStart
   * @see org.shotdraw.figures.LineConnection#connectStart(org.shotdraw.framework.Connector)
   */
  def testConnectStart() {
  }

  /**
   * Method testConnectEnd is testing connectEnd
   * @see org.shotdraw.figures.LineConnection#connectEnd(org.shotdraw.framework.Connector)
   */
  def testConnectEnd() {
  }

  /**
   * Method testDisconnectStart is testing disconnectStart()
   * @see org.shotdraw.figures.LineConnection#disconnectStart()
   */
  def testDisconnectStart() {
  }

  /**
   * Method testDisconnectEnd is testing disconnectEnd()
   * @see org.shotdraw.figures.LineConnection#disconnectEnd()
   */
  def testDisconnectEnd() {
  }

  /**
   * Method testConnectsSame is testing connectsSame
   * @see org.shotdraw.figures.LineConnection#connectsSame(org.shotdraw.framework.ConnectionFigure)
   */
  def testConnectsSame() {
  }

  /**
   * Method testStartFigure is testing startFigure
   * @see org.shotdraw.figures.LineConnection#startFigure()
   */
  def testStartFigure() {
  }

  /**
   * Method testEndFigure is testing endFigure
   * @see org.shotdraw.figures.LineConnection#endFigure()
   */
  def testEndFigure() {
  }

  /**
   * Method testGetStartConnector is testing getStartConnector
   * @see org.shotdraw.figures.LineConnection#getStartConnector()
   */
  def testGetStartConnector() {
  }

  /**
   * Method testGetEndConnector is testing getEndConnector
   * @see org.shotdraw.figures.LineConnection#getEndConnector()
   */
  def testGetEndConnector() {
  }

  /**
   * Method testStartPoint is testing startPoint
   * @see org.shotdraw.figures.LineConnection#startPoint(int, int)
   */
  def testStartPoint() {
  }

  /**
   * Method testEndPoint is testing endPoint
   * @see org.shotdraw.figures.LineConnection#endPoint(int, int)
   */
  def testEndPoint() {
  }

  /**
   * Method testHandles is testing handles
   * @see org.shotdraw.figures.LineConnection#handles()
   */
  def testHandles() {
  }

  /**
   * Method testSetPointAt is testing setPointAt
   * @see org.shotdraw.figures.LineConnection#setPointAt(java.awt.Point, int)
   */
  def testSetPointAt() {
  }

  /**
   * Method testInsertPointAt is testing insertPointAt
   * @see org.shotdraw.figures.LineConnection#insertPointAt(java.awt.Point, int)
   */
  def testInsertPointAt() {
  }

  /**
   * Method testRemovePointAt is testing removePointAt
   * @see org.shotdraw.figures.LineConnection#removePointAt(int)
   */
  def testRemovePointAt() {
  }

  /**
   * Method testUpdateConnection is testing updateConnection()
   * @see org.shotdraw.figures.LineConnection#updateConnection()
   */
  def testUpdateConnection() {
  }

  /**
   * Method testLayoutConnection is testing layoutConnection()
   * @see org.shotdraw.figures.LineConnection#layoutConnection()
   */
  def testLayoutConnection() {
  }

  /**
   * Method testFigureChanged is testing figureChanged
   * @see org.shotdraw.figures.LineConnection#figureChanged(org.shotdraw.framework.FigureChangeEvent)
   */
  def testFigureChanged() {
  }

  /**
   * Method testFigureRemoved is testing figureRemoved
   * @see org.shotdraw.figures.LineConnection#figureRemoved(org.shotdraw.framework.FigureChangeEvent)
   */
  def testFigureRemoved() {
  }

  /**
   * Method testFigureRequestRemove is testing figureRequestRemove
   * @see org.shotdraw.figures.LineConnection#figureRequestRemove(org.shotdraw.framework.FigureChangeEvent)
   */
  def testFigureRequestRemove() {
  }

  /**
   * Method testFigureInvalidated is testing figureInvalidated
   * @see org.shotdraw.figures.LineConnection#figureInvalidated(org.shotdraw.framework.FigureChangeEvent)
   */
  def testFigureInvalidated() {
  }

  /**
   * Method testFigureRequestUpdate is testing figureRequestUpdate
   * @see org.shotdraw.figures.LineConnection#figureRequestUpdate(org.shotdraw.framework.FigureChangeEvent)
   */
  def testFigureRequestUpdate() {
  }

  /**
   * Method testRelease is testing release()
   * @see org.shotdraw.figures.LineConnection#release()
   */
  def testRelease() {
  }

  /**
   * Method testWrite is testing write
   * @see org.shotdraw.figures.LineConnection#write(org.shotdraw.util.StorableOutput)
   */
  def testWrite() {
  }

  /**
   * Method testRead is testing read
   * @see org.shotdraw.figures.LineConnection#read(org.shotdraw.util.StorableInput)
   */
  def testRead() {
  }

  /**
   * Method testVisit is testing visit
   * @see org.shotdraw.figures.LineConnection#visit(org.shotdraw.framework.FigureVisitor)
   */
  def testVisit() {
  }

  /**
   * JUnitDoclet moves marker to this method, if there is not match
   * for them in the regenerated code and if the marker is not empty.
   * This way, no test gets lost when regenerating after renaming.
   * <b>Method testVault is supposed to be empty.</b>
   */
  def testVault() {
  }

  private var lineconnection: LineConnection = null
}

